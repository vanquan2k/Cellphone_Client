{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string';\nimport { BASE_URL } from '../constants/UserConstant';\nexport var axiosClient = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'content-type': 'application/json',\n    Accept: 'application/json' // 'Access-Control-Allow-Origin': 'http://localhost:3000',\n    // 'Access-Control-Allow-Credentials': true,\n\n  },\n  paramsSerializer: function paramsSerializer(params) {\n    return queryString.stringify(params, {\n      encode: false\n    });\n  }\n}); // axiosClient.interceptors.request.use(async config => {\n//   const token = localStorage.getItem('tokens');\n//   config.headers.Authorization = `Bearer ${token}`;\n//   return config;\n// });\n\naxiosClient.interceptors.response.use(function (response) {\n  if (response && response.data) {\n    return response.data;\n  }\n\n  return response;\n}, function (error) {\n  throw error;\n});","map":{"version":3,"sources":["G:/DA/client-cellphones/src/services/config.services.js"],"names":["axios","queryString","BASE_URL","axiosClient","create","baseURL","headers","Accept","paramsSerializer","params","stringify","encode","interceptors","response","use","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,OAAO,IAAMC,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa;AACtCC,EAAAA,OAAO,EAACH,QAD8B;AAEtCI,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEPC,IAAAA,MAAM,EAAE,kBAFD,CAGP;AACA;;AAJO,GAF6B;AAQtCC,EAAAA,gBAAgB,EAAE,0BAAAC,MAAM,EAAI;AAC1B,WAAOR,WAAW,CAACS,SAAZ,CAAsBD,MAAtB,EAA8B;AACnCE,MAAAA,MAAM,EAAE;AAD2B,KAA9B,CAAP;AAGD;AAZqC,CAAb,CAApB,C,CAeP;AACA;AACA;AACA;AACA;;AAEAR,WAAW,CAACS,YAAZ,CAAyBC,QAAzB,CAAkCC,GAAlC,CACE,UAAAD,QAAQ,EAAI;AACV,MAAIA,QAAQ,IAAIA,QAAQ,CAACE,IAAzB,EAA+B;AAC7B,WAAOF,QAAQ,CAACE,IAAhB;AACD;;AACD,SAAOF,QAAP;AACD,CANH,EAOE,UAAAG,KAAK,EAAI;AACP,QAAMA,KAAN;AACD,CATH","sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\nimport { BASE_URL } from '../constants/UserConstant';\r\n\r\nexport const axiosClient = axios.create({\r\n  baseURL:BASE_URL,\r\n  headers: {\r\n    'content-type': 'application/json',\r\n    Accept: 'application/json',\r\n    // 'Access-Control-Allow-Origin': 'http://localhost:3000',\r\n    // 'Access-Control-Allow-Credentials': true,\r\n  },\r\n  paramsSerializer: params => {\r\n    return queryString.stringify(params, {\r\n      encode: false,\r\n    });\r\n  },\r\n});\r\n\r\n// axiosClient.interceptors.request.use(async config => {\r\n//   const token = localStorage.getItem('tokens');\r\n//   config.headers.Authorization = `Bearer ${token}`;\r\n//   return config;\r\n// });\r\n\r\naxiosClient.interceptors.response.use(\r\n  response => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  error => {\r\n    throw error;\r\n  },\r\n);"]},"metadata":{},"sourceType":"module"}